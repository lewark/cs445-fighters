# -*- coding: utf-8 -*-
"""reward_and_preproc_tests.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bUB5P9zvk-rX7p37bTajw-m-RsMIyQ-N
"""

from common.utils import ExperimentRunner as expr
from common.dqn_envs import AllDqnEnvFunctions
from common.reward_function_testing.reward_mods import SF_EXP_1_Test_Modules

from common.constants import*
from stable_baselines3.common.callbacks import EvalCallback
from stable_baselines3 import DQN
import time

all_env_functions = AllDqnEnvFunctions()
all_env_functions

all_test1_mods = SF_EXP_1_Test_Modules()
all_test1_mods

t1 = expr(DQN, verbose=True)

h_params = {'policy': ['MlpPolicy', 'CnnPolicy'],
 'seed': [2, 11],
 'buffer_size': [50000],
 'learning_rate': [1e-05]}

from common.utils import build_all_permutations

h_params_list = build_all_permutations(h_params)
h_params_list


t1.set_tran_opts(total_timesteps=500_000, progress_bar=True)


test = 1
total = len(all_test1_mods.get_test_modules()) * len(all_env_functions.get_env_func_list()) * len(h_params_list)
total

for module in all_test1_mods.get_test_modules():
    for env_func in all_env_functions.get_env_func_list():
        for h_param in h_params_list:

            policy = h_param['policy']
            test_name = f'module: {str(module.__name__)}, env_func: {env_func.__name__}, policy: {policy}'
            t1.set_base_env(module)
            t1.set_env_func(env_func)
            t1.set_tb_log_name(test_name)

            start = time.time()
            print(f'Test: {test} out of {total}')
            print(h_param)
            print(test_name)
            t1.train_model(total_timesteps=500_000, hyper_params=h_param)

            end = start = time.time()
            elapsed = end - start
            print(f'Total train time: {elapsed}')

            test += 1